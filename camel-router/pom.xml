<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.redhat</groupId>
	<artifactId>camel-router</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<properties>
		<hornet.version>2.3.24.Final</hornet.version>
		<commons-dbcp-version>1.4</commons-dbcp-version>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<camel.osgi.dynamic>*,org.apache.derby.jdbc.EmbeddedDriver</camel.osgi.dynamic>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<fabric8.version>2.2.0.redhat-079</fabric8.version>
		<fuse.version>6.2.1.redhat-084</fuse.version>
		<camel-version>2.15.1.redhat-621084</camel-version>
		<activemq-version>5.11.0.redhat-621084</activemq-version>

		<!-- Common docker maven plugin configs -->
		<fabric8.dockerUser>fabric8/</fabric8.dockerUser>
		<docker.image>${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>
		<docker.maven.plugin.version>0.13.6</docker.maven.plugin.version>
		<docker.from>jboss-fuse-6/fis-java-openshift:1.0</docker.from>
		<docker.port.container.jolokia>8778</docker.port.container.jolokia>
		<karaf.version>2.4.0.redhat-621084</karaf.version>
		<karaf.plugin.version>4.0.2.redhat-621079</karaf.plugin.version>
		<spring.features.version>3.0.4</spring.features.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- fabric8 bom must be before fabric8 bom -->
			<dependency>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-project-bom-with-platform-deps</artifactId>
				<version>${fabric8.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.fuse.bom</groupId>
				<artifactId>jboss-fuse-parent</artifactId>
				<version>${fuse.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<!-- scope is compile so all features (there is only one) are installed 
				into startup.properties, and the feature repo itself is not added in etc/org.apache.karaf.features.cfg 
				file -->
			<groupId>org.jboss.fuse</groupId>
			<artifactId>fuse-karaf-framework</artifactId>
			<version>${fuse.version}</version>
			<type>kar</type>
			<!-- no need to download kar dependencies -->
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf.assemblies.features</groupId>
			<artifactId>standard</artifactId>
			<classifier>features</classifier>
			<type>xml</type>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf.assemblies.features</groupId>
			<artifactId>enterprise</artifactId>
			<classifier>features</classifier>
			<type>xml</type>
		</dependency>
		<dependency>
			<groupId>io.fabric8.mq</groupId>
			<artifactId>camel-amq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.karaf</groupId>
			<artifactId>apache-camel</artifactId>
			<classifier>features</classifier>
			<type>xml</type>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-karaf</artifactId>
			<version>${activemq-version}</version>
			<classifier>features</classifier>
			<type>xml</type>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf.features</groupId>
			<artifactId>spring</artifactId>
			<version>${spring.features.version}</version>
			<classifier>features</classifier>
			<type>xml</type>
		</dependency>



		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-camel</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-csv</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<!-- testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.fabric8</groupId>
			<artifactId>fabric8-arquillian</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-sql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-dozer</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jaxb</artifactId>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>release.fusesource.org</id>
			<name>FuseSource Release Repository</name>
			<url>http://repo.fusesource.com/nexus/content/repositories/releases</url>
		</repository>
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>ea.fusesource.org</id>
			<name>FuseSource Community Early Access Release Repository</name>
			<url>http://repo.fusesource.com/nexus/content/groups/ea</url>
		</repository>
		<repository>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>snapshot.fusesource.org</id>
			<name>FuseSource Snapshot Repository</name>
			<url>http://repo.fusesource.com/nexus/content/repositories/snapshots</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>release.fusesource.org</id>
			<name>FuseSource Release Repository</name>
			<url>http://repo.fusesource.com/nexus/content/repositories/releases</url>
		</pluginRepository>
		<pluginRepository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>ea.fusesource.org</id>
			<name>FuseSource Community Early Access Release Repository</name>
			<url>http://repo.fusesource.com/nexus/content/groups/ea</url>
		</pluginRepository>
		<pluginRepository>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>snapshot.fusesource.org</id>
			<name>FuseSource Snapshot Repository</name>
			<url>http://repo.fusesource.com/nexus/content/repositories/snapshots</url>
		</pluginRepository>
	</pluginRepositories>
	<build>
		<plugins>
			<!-- generate OSGi bundle -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>

			<!-- camel plugin -->
			<plugin>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-maven-plugin</artifactId>
			</plugin>
			<!-- allows the route to be ran via 'mvn exec:java' -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<configuration>
					<mainClass>org.apache.camel.spring.Main</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>kube-generate</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<!-- Use this to modify the kubernetes.json -->
				<dependency>
					<groupId>io.fabric8</groupId>
					<artifactId>kubernetes-generator</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>fabric8</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<fabric8.service.name>${project.artifactId}</fabric8.service.name>
				<fabric8.service.headless>true</fabric8.service.headless>

				<fabric8.metrics.scrape>true</fabric8.metrics.scrape>
				<fabric8.metrics.port>9779</fabric8.metrics.port>
				<docker.port.container.soap>8080</docker.port.container.soap>

				<fabric8.service.name>${project.artifactId}</fabric8.service.name>
				<fabric8.service.port>80</fabric8.service.port>
				<fabric8.service.containerPort>8080</fabric8.service.containerPort>

				<fabric8.label.component>${project.artifactId}</fabric8.label.component>
				<fabric8.label.container>java</fabric8.label.container>
				<fabric8.label.group>camel-jms-eap-ose</fabric8.label.group>
				<fabric8.iconRef>camel</fabric8.iconRef>
			</properties>
			<dependencies>


				<!-- testing -->
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.fabric8</groupId>
					<artifactId>fabric8-arquillian</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.3</version>
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
						</configuration>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<version>${fabric8.version}</version>
						<executions>
							<execution>
								<id>json</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>json</goal>
								</goals>
							</execution>
							<execution>
								<id>attach</id>
								<phase>package</phase>
								<goals>
									<goal>attach</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>karaf-distro</id>
			<properties>
				<docker.from>jboss-fuse-6/fis-karaf-openshift:1.0</docker.from>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/*ModelProcessor.java</exclude>
							</excludes>
							<testExcludes>
								<exclude>**/*KT.java</exclude>
							</testExcludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.karaf.tooling</groupId>
						<artifactId>karaf-maven-plugin</artifactId>
						<version>${karaf.plugin.version}</version>
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>karaf-assembly</id>
								<goals>
									<goal>assembly</goal>
								</goals>
								<phase>install</phase>
							</execution>
							<execution>
								<id>karaf-archive</id>
								<goals>
									<goal>archive</goal>
								</goals>
								<phase>install</phase>
							</execution>
						</executions>
						<configuration>
							<karafVersion>v24</karafVersion>
							<javase>1.8</javase>
							<useReferenceUrls>true</useReferenceUrls>
							<!-- do not include build output directory -->
							<includeBuildOutputDirectory>false</includeBuildOutputDirectory>
							<!-- no startupFeatures -->
							<startupFeatures>
								<feature>karaf-framework</feature>
								<feature>shell</feature>
								<feature>jaas</feature>
								<feature>spring</feature>
								<feature>camel-spring</feature>
								<feature>camel-jaxb</feature>
								<feature>camel-csv</feature>
								<feature>camel-sql</feature>
								<feature>camel-jms</feature>
								<feature>camel-http4</feature>
								<features>camel-dozer</features>
								<features>commons-dbcp</features>
								<feature>activemq-camel</feature>
								<feature>derby</feature>
							</startupFeatures>
							<startupBundles>
								<!-- this needs to be here for spring-dm to resolve properly!! -->
								<bundle>mvn:org.apache.karaf.bundle/org.apache.karaf.bundle.core/3.0.4</bundle>
								<bundle>mvn:io.fabric8.mq/mq-client/2.2.0.redhat-079</bundle>
								<bundle>mvn:io.fabric8/fabric8-utils/2.2.0.redhat-079</bundle>
								<bundle>mvn:${project.groupId}/${project.artifactId}/${project.version}</bundle>
							</startupBundles>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jolokia</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker.maven.plugin.version}</version>
						<configuration>
							<images>
								<image>
									<name>${docker.image}</name>
									<build>
										<from>${docker.from}</from>
										<assembly>
											<basedir>/deployments</basedir>
											<user>jboss:jboss:jboss</user>
											<inline
												xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
												xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
												<id>${project.artifactId}</id>
												<files>
													<!-- copy karaf archive -->
													<file>
														<source>${project.build.directory}/${project.artifactId}-${project.version}.tar.gz</source>
														<outputDirectory>/</outputDirectory>
													</file>
												</files>
											</inline>
										</assembly>
										<cmd>
											<shell>/deployments/deploy-and-run.sh</shell>
										</cmd>
									</build>
								</image>
							</images>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>hawtapp</id>
			<properties>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/*ModelProcessor.java</exclude>
							</excludes>
							<testExcludes>
								<exclude>**/*KT.java</exclude>
							</testExcludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jolokia</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker.maven.plugin.version}</version>
						<configuration>
							<images>
								<image>
									<name>${docker.image}</name>
									<build>
										<from>${docker.from}</from>
										<assembly>
											<basedir>/deployments</basedir>
											<descriptorRef>hawt-app</descriptorRef>
										</assembly>
										<env>
											<JAVA_LIB_DIR>/deployments/lib</JAVA_LIB_DIR>
											<JAVA_MAIN_CLASS>org.apache.camel.spring.Main</JAVA_MAIN_CLASS>
										</env>
									</build>
								</image>
							</images>
						</configuration>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>hawt-app-maven-plugin</artifactId>
						<version>${fabric8.version}</version>
						<executions>
							<execution>
								<id>hawt-app</id>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<javaMainClass>org.apache.camel.spring.Main</javaMainClass>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
