<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <!-- HornetQ JMS Connection -->
    <bean class="org.springframework.jndi.JndiTemplate" id="jndiTemplate">
        <property name="environment">
            <props>
                <prop key="java.naming.factory.initial">org.jboss.naming.remote.client.InitialContextFactory</prop>
                <prop key="java.naming.provider.url">remote://simons-macbook-pro.local:4447</prop>
                <prop key="java.naming.factory.url.pkgs">org.jnp.interfaces:org.jboss.naming</prop>
                <prop key="java.naming.security.principal">hornetClient</prop>
                <prop key="java.naming.security.credentials">Abcd1234!</prop>
                <prop key="javax.security.sasl.policy.noplaintext">false</prop>
                <prop key="javax.security.sasl.policy.noanonymous">false</prop>
            </props>
        </property>
    </bean>
    <bean class="org.springframework.jndi.JndiObjectFactoryBean" id="jmsQueueConnectionFactory">
        <property name="jndiTemplate">
            <ref bean="jndiTemplate"/>
        </property>
        <property name="jndiName">
            <!--                         <value>jms/RemoteConnectionFactory</value> -->
            <value>jms/XARemoteConnectionFactory</value>
        </property>
    </bean>
    <!--     <bean -->
    <!--         class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter" id="authenticatedConnectionFactory"> -->
    <!--         <property name="targetConnectionFactory" ref="jmsQueueConnectionFactory"/> -->
    <!--         <property name="username" value="hornetClient"/> -->
    <!--         <property name="password" value="Abcd1234!"/> -->
    <!--     </bean> -->
    <bean class="org.apache.camel.component.jms.JmsComponent" name="jms">
        <property name="connectionFactory" ref="jmsQueueConnectionFactory"/>
        <!--         <property name="username" value="hornetClient"/> -->
        <!--         <property name="password" value="Abcd1234!"/> -->
    </bean>
    <!-- Policy -->
    <bean class="org.apache.camel.spring.spi.SpringTransactionPolicy" id="PROPAGATION_REQUIRED">
        <property name="transactionManager" ref="jta.transactionManager"/>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
    </bean>
    <!-- This is the Spring wrapper over the JTA configuration -->
    <!-- org.springframework.transaction.PlatformTransactionManager -->
    <bean
        class="org.springframework.transaction.jta.JtaTransactionManager" id="jta.transactionManager"/>
    <!-- ActiveMQ Connection -->
    <!--         <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="activemq"> -->
    <!--     <bean class="org.apache.activemq.ActiveMQXAConnectionFactory" id="xa.connectionFactory"> -->
    <!--         <property name="brokerURL" value="tcp://localhost:61616"/> -->
    <!--         <property name="userName" value="admin"/> -->
    <!--         <property name="password" value="admin"/> -->
    <!--     </bean> -->
    <!--     <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="activemq"> -->
    <!--         <property name="connectionFactory" ref="xa.connectionFactory"/> -->
    <!--         <property name="transactionManager" ref="jta.transactionManager"/> -->
    <!--         <property name="transacted" value="true"/> -->
    <!--         <property name="cacheLevelName" value="CACHE_CONSUMER"/> -->
    <!--     </bean> -->
    <bean class="io.fabric8.mq.camel.AMQComponent" id="activemq">
        <property name="connectionFactory" ref="amqXaConnectionFactory"/>
        <property name="transactionManager" ref="jta.transactionManager"/>
        <property name="transacted" value="true"/>
        <property name="serviceName" value="broker"/>
    </bean>
    <!--         <bean class="io.fabric8.mq.core.MQConnectionFactory" id="connectionFactory"> -->
    <!--             <property name="userName" value="admin"/> -->
    <!--             <property name="password" value="admin"/> -->
    <!--         </bean> -->
    <bean class="org.apache.activemq.ActiveMQXAConnectionFactory" id="amqXaConnectionFactory">
        <property name="userName" value="admin"/>
        <property name="password" value="admin"/>
        <property name ="redeliveryPolicy">
        	<bean class="org.apache.activemq.RedeliveryPolicy">
        		<property name="maximumRedeliveries" value="2"/>
        		<property name="redeliveryDelay" value="2000"/>
        	</bean>
        </property>
        <property name="brokerURL">
            <bean class="io.fabric8.mq.core.MQs" factory-method="getBrokerURL">
                <constructor-arg value="broker"/>
                <constructor-arg value=""/>
            </bean>
        </property>
    </bean>
    <camelContext id="jms-dispatcher" trace="true" xmlns="http://camel.apache.org/schema/spring">
        <route id="consume-hornetq">
            <from id="_from2" uri="jms:SterlingGatewayQ?transacted=true"/>
            <log id="_log1" message="Consumed message from hornetQ jms:SterlingGatewayQ"/>
            <transacted id="_transacted1" ref="PROPAGATION_REQUIRED"/>
            <choice id="_choice1">
                <when id="_when1">
                    <xpath>/Order/@Status = 'Created'</xpath>
                    <to id="_to2" uri="activemq:OrderAckToRNW"/>
                </when>
                <when id="_when2">
                    <xpath id="_xpath1">/Order/@DocumentType = 'data'</xpath>
                    <to id="_to3" uri="activemq:OrderAckToATG"/>
                </when>
                <otherwise id="_otherwise1">
                    <to id="_to4" uri="activemq:OrderAckToPayment"/>
                </otherwise>
            </choice>
        </route>
    </camelContext>
</beans>
