<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <!-- HornetQ JMS Connection -->
    <bean class="org.springframework.jndi.JndiTemplate" id="jndiTemplate">
        <property name="environment">
            <props>
                <prop key="java.naming.factory.initial">org.jboss.naming.remote.client.InitialContextFactory</prop>
                <prop key="java.naming.provider.url">remote://simons-mbp.home:4447</prop>
                <prop key="java.naming.factory.url.pkgs">org.jnp.interfaces:org.jboss.naming</prop>
				<prop key="java.naming.security.principal">hornetClient</prop>
                <prop key="java.naming.security.credentials">Abcd1234!</prop>
            </props>
        </property>
    </bean>
    <bean class="org.springframework.jndi.JndiObjectFactoryBean" id="jmsQueueConnectionFactory">
        <property name="jndiTemplate">
            <ref bean="jndiTemplate"/>
        </property>
        <property name="jndiName">
            <value>jms/RemoteConnectionFactory</value>
        </property>
    </bean>
    <bean
        class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter" id="authenticatedConnectionFactory">
        <property name="targetConnectionFactory" ref="jmsQueueConnectionFactory"/>
        <property name="username" value="hornetClient"/>
        <property name="password" value="Abcd1234!"/>
    </bean>
    <bean class="org.apache.camel.component.jms.JmsComponent" name="jms">
        <property name="connectionFactory" ref="authenticatedConnectionFactory"/>
    </bean>
    <!-- ActiveMQ Connection -->
    <bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="activemq">
        <property name="brokerURL" value="tcp://localhost:61616"/>
        <property name="userName" value="admin"/>
        <property name="password" value="admin"/>
    </bean>
    <!-- Here is a sample which processes the input files (leaving them in place 
		- see the 'noop' flag), and sends them on a JMS queue. This queue is watched 
		by another route which then performs content based routing on the messages 
		using XPath. -->
    <camelContext id="jms-dispatcher" trace="true" xmlns="http://camel.apache.org/schema/spring">
        <route id="consume-hornetq">
            <from id="_from2" uri="jms:SterlingGatewayQ"/>
            <choice id="_choice1">
                <when id="_when1">
                    <xpath>/Order/@Status = 'Created'</xpath>
                    <to id="_to2" uri="activemq:OrderAckToRNW"/>
                </when>
                <when id="_when2">
                    <xpath id="_xpath1">/Order/@DocumentType = 'data'</xpath>
                    <to id="_to3" uri="activemq:OrderAckToATG"/>
                </when>
                <otherwise id="_otherwise1">
                    <to id="_to4" uri="activemq:OrderAckToPayment"/>
                </otherwise>
            </choice>
        </route>
    </camelContext>
</beans>
